name: Android CI

on:
  push:
    branches: [main, docs/*]
  pull_request:
    branches: [main]

jobs:
  android-build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        api-level: [34]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/build-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make Gradlew Executable
        run: |
          if [ -f "gradlew" ]; then
            chmod +x gradlew
          else
            echo "No gradlew found - Android project will be set up in future development"
          fi

      - name: Build Debug APK
        run: |
          if [ -f "gradlew" ]; then
            ./gradlew assembleDebug --no-daemon --stacktrace
          else
            echo "No gradlew found - Android build will be set up in future development"
          fi

      - name: Run Unit Tests
        run: |
          if [ -f "gradlew" ]; then
            ./gradlew test --no-daemon --stacktrace
          else
            echo "No gradlew found - Android unit tests will be set up in future development"
          fi

      - name: Run Lint
        run: |
          if [ -f "gradlew" ]; then
            ./gradlew lint --no-daemon --stacktrace
          else
            echo "No gradlew found - Android lint will be set up in future development"
          fi

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-test-results-${{ matrix.api-level }}
          path: |
            app/build/reports/tests/
            app/build/test-results/
          retention-days: 30

      - name: Upload Lint Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-lint-results-${{ matrix.api-level }}
          path: |
            app/build/reports/lint-results*.html
            app/build/reports/lint-results*.xml
          retention-days: 30

      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: android-debug-apk-${{ matrix.api-level }}
          path: app/build/outputs/apk/debug/*.apk
          retention-days: 7

  android-instrumented-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    strategy:
      matrix:
        api-level: [34]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/build-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Enable KVM Group Perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: AVD Cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Create AVD and Generate Snapshot for Caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Run Instrumented Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: |
            if [ -f "gradlew" ]; then
              ./gradlew connectedAndroidTest --no-daemon --stacktrace
            else
              echo "No gradlew found - Android instrumented tests will be set up in future development"
            fi

      - name: Upload Instrumented Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-instrumented-test-results-${{ matrix.api-level }}
          path: |
            app/build/reports/androidTests/
            app/build/outputs/androidTest-results/
          retention-days: 30
